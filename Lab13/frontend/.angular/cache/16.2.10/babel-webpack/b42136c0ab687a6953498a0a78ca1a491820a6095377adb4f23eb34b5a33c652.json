{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/items';\n  }\n  getItems() {\n    return this.http.get(this.apiUrl);\n  }\n  getItemById(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n  createItem(item) {\n    return this.http.post(this.apiUrl, item);\n  }\n  updateItem(id, item) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, item);\n  }\n  deleteItem(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ItemService","constructor","http","apiUrl","getItems","get","getItemById","id","url","createItem","item","post","updateItem","put","deleteItem","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/dev/Development/DAWA/LABS-DAWA-ECASTRO/Lab13/frontend/src/app/item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemService {\n  private apiUrl = 'http://localhost:3000/api/items';\n\n  constructor(private http: HttpClient) {}\n\n  getItems() {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  getItemById(id: string): Observable<any> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.get(url);\n  }\n\n  createItem(item: any): Observable<any> {\n    return this.http.post(this.apiUrl, item);\n  }\n\n  updateItem(id: string, item: any): Observable<any> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, item);\n  }\n\n  deleteItem(id: string): Observable<any> {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,WAAWA,CAACC,EAAU;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACG,GAAG,CAAC;EAC3B;EAEAC,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,MAAM,EAAEO,IAAI,CAAC;EAC1C;EAEAE,UAAUA,CAACL,EAAU,EAAEG,IAAS;IAC9B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAACL,GAAG,EAAEE,IAAI,CAAC;EACjC;EAEAI,UAAUA,CAACP,EAAU;IACnB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,EAAE,EAAE;IAClC,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAACP,GAAG,CAAC;EAC9B;EAAC,QAAAQ,CAAA,G;qBA1BUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}